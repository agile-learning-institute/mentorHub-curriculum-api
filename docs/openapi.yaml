openapi: 3.0.3
info:
  title: Curriculum API
  description: |-
    This API manages the curriculum for apprentices, providing endpoints to add, update, and retrieve learning resources.
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
paths:
  /api/curriculum/:
    post:
      summary: Add a new curriculum
      operationId: addCurriculum
      requestBody:
        description: Curriculum details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculum'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
        '405':
          description: Invalid input
    get:
      summary: Get a list of all curricula
      operationId: getAllCurricula
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curricula'
        '404':
          description: Not found
        '405':
          description: Validation exception
  /api/curriculum/{id}:
    patch:
      summary: Update an existing curriculum
      operationId: updateCurriculum
      parameters:
        - name: id
          in: path
          description: ID of curriculum to update
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: Updated curriculum details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculum'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
        '404':
          description: Curriculum not found
        '405':
          description: Validation exception
    get:
      summary: Get an existing curriculum
      operationId: getCurriculum
      parameters:
        - name: id
          in: path
          description: ID of curriculum to retrieve
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
        '404':
          description: Curriculum not found
        '405':
          description: Validation exception
  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
  /api/health/:
    get:
      summary: Health Check Endpoint
      operationId: healthCheck
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The status of the API
                  uptime:
                    type: string
                    description: The uptime of the API
                  version:
                    type: string
                    description: The version of the API

components:
  schemas:
    Curriculum:
      type: object
      required:
        - name
        - version
        - resources
      properties:
        _id:
          description: The unique identifier for a curriculum
          type: string
          format: UUID
        name:
          description: The name of the curriculum
          type: string
        version:
          description: The version of the curriculum
          type: string
        resources:
          description: An array of resources within the curriculum
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    Resource:
      type: object
      required:
        - type
        - review
        - roadmap
      properties:
        type:
          description: The type of resource (topic or adhoc)
          type: string
          enum:
            - topic
            - adhoc
        resourceId:
          description: The ID of the resource assigned
          type: string
          format: UUID
        topicId:
          description: The ID of the topic associated with the resource
          type: string
          format: UUID
        name:
          description: The name of the resource
          type: string
        link:
          description: The link to the resource (for adhoc resources)
          type: string
        review:
          description: Free text review of the person's experience with this resource
          type: string
        roadmap:
          description: The status of the resource in the learning roadmap
          type: string
          enum:
            - completed
            - celebrated
            - now
            - next
            - later
        status:
          description: Archived, Assigned, Started, Completed
          type: string
        statusDate:
          description: Date the status was last changed
          type: string
          format: date-time
        started:
          description: Date/time the resource was started
          type: string
          format: date-time
        completed:
          description: Date/time the resource was completed
          type: string
          format: date-time
        rating:
          description: Rating of the resource (0-5)
          type: integer
          minimum: 0
          maximum: 5
    Config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Semantic Version Number
        stores:
          type: array
          items:
            type: object
            properties:
              collectionName:
                type: string
                description: MongoDB Collection name
              version:
                type: string
                description: Schema Version for the collection
              filter:
                type: string
                description: Special Filter applied to collection
        configItems:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Conf Item Name (Env Var Name, File Name)
              value:
                type: string
                description: The value for that config item
              from:
                type: string
                description: Where the value was found
                enum:
                  - default
                  - environment
                  - file
